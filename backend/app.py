import os
import base64
from flask import Flask, render_template, redirect, url_for, request, jsonify
# Import CORS to allow cross-origin requests from Netlify frontend
from flask_cors import CORS
from dotenv import load_dotenv
from sendgrid import SendGridAPIClient
from sendgrid.helpers.mail import (Mail, Attachment, FileContent, FileName, FileType, Disposition)

# =================================================================
# ===== 1. ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡πÇ‡∏´‡∏•‡∏î Configuration =====
# =================================================================

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå .env ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà Environment Variables
load_dotenv()

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Flask Application (‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å! ‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏Å‡πà‡∏≠‡∏ô @app.route)
app = Flask(__name__)

# -----------------------------------------------------------------
# Enable CORS for API endpoints so that the Netlify-hosted frontend
# can communicate with this Flask backend. Without this, browsers
# will block the POST request to /submit-quiz due to the Same-Origin
# Policy. Adjust the origins list to restrict requests to only your
# Netlify domain if desired.
# Example: CORS(app, resources={r"/submit-quiz": {"origins": ["https://your-site.netlify.app"]}})
CORS(app, resources={r"/submit-quiz": {"origins": "*"}})

# ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ Configuration ‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏à‡∏≤‡∏Å .env
SENDGRID_API_KEY = os.getenv('SENDGRID_API_KEY')
SENDER_EMAIL = os.getenv('SENDER_EMAIL')
SENDER_NAME = os.getenv('SENDER_NAME', '‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì') # ‡πÉ‡∏™‡πà‡∏Ñ‡πà‡∏≤ default ‡πÑ‡∏ß‡πâ
STRIPE_LINK_4900 = os.getenv('STRIPE_LINK_4900')
STRIPE_LINK_2900 = os.getenv('STRIPE_LINK_2900')

# =================================================================
# ===== 2. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏• =====
# =================================================================

def send_results_email(recipient_email: str, style_name: str, customer_name: str = "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤") -> None:
    """
    ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏ô‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô 4 period
    """
    if not SENDGRID_API_KEY or not SENDER_EMAIL:
        print("Error: SendGrid API Key or Sender Email is not configured.")
        return

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á Link ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏•
    # ‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏†‡∏≤‡∏¢‡πÉ‡∏ô request context ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ url_for ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ
    with app.app_context():
        fast_profit_url = url_for('result_fast_profit', _external=True)
        stable_growth_url = url_for('result_stable_growth', _external=True)

    subject = ""
    html_content = ""
    attachment_paths = [] 
    sender_name = SENDER_NAME

    if style_name == 'fast':
        subject = f"[‡∏ú‡∏•‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå] ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô AI ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ '‡∏™‡∏≤‡∏¢‡∏ó‡∏≥‡∏Å‡∏≥‡πÑ‡∏£‡πÄ‡∏£‡πá‡∏ß (Fast Profit)'"
        # üî¥ ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Path ‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ô‡∏ö 4 ‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
        attachment_paths = [
            'reports/fast_profit_report_period1.pdf',
            'reports/fast_profit_report_period2.pdf',
            'reports/fast_profit_report_period3.pdf',
            'reports/fast_profit_report_period4.pdf',
        ]
        
        # (‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ html_content ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
        html_content = f"""
        <p>‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì {customer_name},</p>
        <p>‡πÄ‡∏£‡∏≤‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏à‡∏≤‡∏Å‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏î‡∏π‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏£‡∏±‡∏ö</p>
        <p>‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ <strong>"‡∏™‡∏≤‡∏¢ '‡∏ó‡∏≥‡∏Å‡∏≥‡πÑ‡∏£‡πÄ‡∏£‡πá‡∏ß' (Fast Profit)"</strong></p>
        <p>‡∏ã‡∏∂‡πà‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏´‡∏±‡∏ß‡πÉ‡∏à‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏´‡πá‡∏ô‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏±‡∏ô‡∏™‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î</p>
        <p>‡∏à‡∏≤‡∏Å‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠ Bot 2 ‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏≠‡∏ö‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Å‡∏≥‡πÑ‡∏£‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ö‡πâ‡∏≤‡∏Ñ‡∏•‡∏±‡πà‡∏á‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞:</p>
        <ol>
            <li><strong>BOT NAME: The Singularity (‡∏à‡∏±‡∏Å‡∏£‡∏Å‡∏•‡πÄ‡∏£‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á)</strong><br>
                ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏±‡∏Å‡∏£‡πÄ‡∏£‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≥‡πÑ‡∏£‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ö‡πâ‡∏≤‡∏Ñ‡∏•‡∏±‡πà‡∏á
                <ul>
                    <li>‡∏ú‡∏•‡∏Å‡∏≥‡πÑ‡∏£‡∏™‡∏∞‡∏™‡∏°‡∏ï‡∏•‡∏≠‡∏î‡∏õ‡∏µ: $65,211.19</li>
                    <li>‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ (‡∏ï‡πà‡∏≠‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™): 163.03%</li>
                    <li>Profit Factor: 4.04x (‡∏ó‡∏∏‡∏Å 1 ‡∏ö‡∏≤‡∏ó‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏µ‡∏¢‡πÑ‡∏õ ‡∏à‡∏∞‡∏ó‡∏ß‡∏á‡∏Ñ‡∏∑‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤ 4.04 ‡∏ö‡∏≤‡∏ó)</li>
                </ul>
            </li>
            <br>
            <li><strong>BOT NAME: The Scalpel (‡∏Ñ‡∏°‡∏°‡∏µ‡∏î‡∏ú‡πà‡∏≤‡∏ï‡∏±‡∏î‡∏Å‡∏≥‡πÑ‡∏£)</strong><br>
                ‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏ó‡∏£‡∏î‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏î‡∏∏‡∏à‡∏°‡∏µ‡∏î‡∏´‡∏°‡∏≠ ‡πÄ‡∏â‡∏∑‡∏≠‡∏ô‡πÄ‡∏≠‡∏≤‡∏Å‡∏≥‡πÑ‡∏£‡∏Å‡πâ‡∏≠‡∏ô‡πÇ‡∏ï‡∏à‡∏≤‡∏Å‡∏ï‡∏•‡∏≤‡∏î‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠
                <ul>
                    <li>‡∏ú‡∏•‡∏Å‡∏≥‡πÑ‡∏£‡∏™‡∏∞‡∏™‡∏°‡∏ï‡∏•‡∏≠‡∏î‡∏õ‡∏µ: $22,186.11</li>
                    <li>‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ (‡∏ï‡πà‡∏≠‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™): 55.47%</li>
                    <li>Sharpe Ratio: 2.92 (‡∏Å‡∏≤‡∏£‡∏±‡∏ô‡∏ï‡∏µ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Å‡∏≥‡πÑ‡∏£‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡πà‡∏≤‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á)</li>
                </ul>
            </li>
        </ol>
        <p>‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ...‡πÑ‡∏õ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏â‡∏ö‡∏±‡∏ö‡πÄ‡∏ï‡πá‡∏° (‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å‡∏≠‡∏∑‡πà‡∏ô‡πÜ) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ß‡πà‡∏≤ Bot ‡πÄ‡∏ó‡∏£‡∏î‡∏ï‡∏±‡∏ß‡πÑ‡∏´‡∏ô‡∏ó‡∏µ‡πà "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏∏‡∏ì" ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞</p>
        <a href="{fast_profit_url}" style="background-color: #007bff; color: white; padding: 12px 25px; text-align: center; text-decoration: none; display: inline-block; border-radius: 5px; font-weight: bold;">
            &gt;&gt; ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ú‡∏•‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏â‡∏ö‡∏±‡∏ö‡πÄ‡∏ï‡πá‡∏°‡πÅ‡∏•‡∏∞ Bot ‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì &lt;&lt;
        </a>
        <p>‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡∏ú‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡πâ‡∏≤‡∏ß‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏™‡∏π‡πà‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô "‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á" ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏ß‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö</p>
        <p>‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏™‡∏ô‡∏∏‡∏Å‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏û‡∏ö‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö</p>
        <p>‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö,<br>{sender_name}</p>
        """
    else:  # 'stable'
        subject = f"[‡∏ú‡∏•‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå] ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô AI ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ '‡∏™‡∏≤‡∏¢‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á (Stable Growth)'"
        # üî¥ ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Path ‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ô‡∏ö 4 ‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
        attachment_paths = [
            'reports/stable_growth_report_period1.pdf',
            'reports/stable_growth_report_period2.pdf',
            'reports/stable_growth_report_period3.pdf',
            'reports/stable_growth_report_period4.pdf',
        ]
        
        # (‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ html_content ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
        html_content = f"""
        <p>‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì {customer_name},</p>
        <p>‡πÄ‡∏£‡∏≤‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏à‡∏≤‡∏Å‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏î‡∏π‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏£‡∏±‡∏ö</p>
        <p>‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ <strong>"‡∏™‡∏≤‡∏¢ '‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á' (Stable Growth)"</strong></p>
        <p>‡∏ã‡∏∂‡πà‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏ô‡∏±‡∏Å‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏ú‡∏π‡πâ‡∏ä‡∏≤‡∏ç‡∏â‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏¢‡∏±‡πà‡∏á‡∏¢‡∏∑‡∏ô ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î</p>
        <p>‡∏à‡∏≤‡∏Å‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠ Bot 2 ‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏°‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á‡πÉ‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß:</p>
        <ol>
            <li><strong>BOT NAME: The Oracle (‡∏°‡∏´‡∏≤‡πÄ‡∏ó‡∏û‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á)</strong><br>
                ‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏Å‡∏õ‡πâ‡∏≠‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏∏‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏±‡πà‡∏á‡∏™‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏ö‡∏≤‡∏¢‡πÉ‡∏à‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
                <ul>
                    <li>‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î (Max. Drawdown): 3.34%</li>
                    <li>Sharpe Ratio: 2.74 (‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏≤‡∏ç‡∏â‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à)</li>
                    <li>‡∏ú‡∏•‡∏Å‡∏≥‡πÑ‡∏£‡∏£‡∏ß‡∏°‡∏ï‡∏•‡∏≠‡∏î‡∏õ‡∏µ: $3,537.41 (‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ 8.84% ‡∏ï‡πà‡∏≠‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™)</li>
                </ul>
            </li>
            <br>
            <li><strong>BOT NAME: The Apex (‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÅ‡∏´‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡πÅ‡∏ö‡∏ö)</strong><br>
                ‡∏ú‡∏™‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡∏ó‡∏µ‡πà‡∏ó‡∏£‡∏á‡∏û‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
                <ul>
                    <li>Sharpe Ratio: 3.62 (‡∏Ñ‡∏£‡∏≠‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á Bot ‡∏ó‡∏µ‡πà‡∏â‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î)</li>
                    <li>‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î (Max. Drawdown): 4.93%</li>
                    <li>‡∏ú‡∏•‡∏Å‡∏≥‡πÑ‡∏£‡∏£‡∏ß‡∏°‡∏ï‡∏•‡∏≠‡∏î‡∏õ‡∏µ: $14,009.15 (‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ 35.02% ‡∏ï‡πà‡∏≠‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™)</li>
                </ul>
            </li>
        </ol>
        <p>‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ...‡πÑ‡∏õ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏â‡∏ö‡∏±‡∏ö‡πÄ‡∏ï‡πá‡∏° (‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å‡∏≠‡∏∑‡πà‡∏ô‡πÜ) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ß‡πà‡∏≤ Bot ‡πÄ‡∏ó‡∏£‡∏î‡∏ï‡∏±‡∏ß‡πÑ‡∏´‡∏ô‡∏ó‡∏µ‡πà "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏∏‡∏ì" ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞</p>
        <a href="{stable_growth_url}" style="background-color: #28a745; color: white; padding: 12px 25px; text-align: center; text-decoration: none; display: inline-block; border-radius: 5px; font-weight: bold;">
            &gt;&gt; ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ú‡∏•‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏â‡∏ö‡∏±‡∏ö‡πÄ‡∏ï‡πá‡∏°‡πÅ‡∏•‡∏∞ Bot ‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì &lt;&lt;
        </a>
        <p>‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡∏ú‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡πâ‡∏≤‡∏ß‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏™‡∏π‡πà‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô "‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á" ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏ß‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö</p>
        <p>‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏™‡∏ô‡∏∏‡∏Å‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏û‡∏ö‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö</p>
        <p>‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö,<br>{sender_name}</p>
        """

    message = Mail(
        from_email=(SENDER_EMAIL, SENDER_NAME),
        to_emails=recipient_email,
        subject=subject,
        html_content=html_content
    )

    attachments_list = []
    for path in attachment_paths:
        try:
            if os.path.exists(path):
                with open(path, 'rb') as f:
                    data = f.read()
                encoded_file = base64.b64encode(data).decode()
                attachedFile = Attachment(
                    FileContent(encoded_file),
                    FileName(os.path.basename(path)),
                    FileType('application/pdf'),
                    Disposition('attachment')
                )
                attachments_list.append(attachedFile)
            else:
                print(f"Warning: Attachment file not found at {path}")
        except Exception as e:
            print(f"An error occurred while attaching file {path}: {e}")
    
    if attachments_list:
        message.attachment = attachments_list

    try:
        sg = SendGridAPIClient(SENDGRID_API_KEY)
        sg.send(message)
        print(f"Results email sent to {recipient_email}")
    except Exception as e:
        print(f"Error sending email: {e}")

def send_welcome_email(customer_email: str, purchase_type: str) -> None:
    """
    ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
    """
    if not SENDGRID_API_KEY or not SENDER_EMAIL:
        print("Error: SendGrid API Key or Sender Email is not configured.")
        return

    subject = ""
    html_content = ""
    sender_name = SENDER_NAME

    if purchase_type == 'fast-track':
        subject = "‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà The Fast-Track Kit!"
        html_content = f"""
        <p>‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö,</p>
        <p>‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏° The Fast-Track Kit ‡∏Ñ‡∏£‡∏±‡∏ö! ‡πÄ‡∏£‡∏≤‡∏ï‡∏∑‡πà‡∏ô‡πÄ‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡πà‡∏ß‡∏°‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì</p>
        <p>‡πÉ‡∏ô‡πÑ‡∏°‡πà‡∏ä‡πâ‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å‡πÑ‡∏°‡πà‡∏Å‡∏µ‡πà‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤</p>
        <p>‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö,<br>{sender_name}</p>
        """
    else: # 'standard' or 'normal'
        subject = "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠! ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢"
        html_content = f"""
        <p>‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö,</p>
        <p>‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ Bot ‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡∏Ñ‡∏£‡∏±‡∏ö! ‡πÄ‡∏£‡∏≤‡πÑ‡∏î‡πâ‡πÅ‡∏ô‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏°‡∏≤‡πÉ‡∏´‡πâ‡πÉ‡∏ô‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏â‡∏ö‡∏±‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß</p>
        <p>‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏™‡∏ô‡∏∏‡∏Å‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö</p>
        <p>‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö,<br>{sender_name}</p>
        """
    
    message = Mail(
        from_email=(SENDER_EMAIL, SENDER_NAME),
        to_emails=customer_email,
        subject=subject,
        html_content=html_content
    )

    try:
        sg = SendGridAPIClient(SENDGRID_API_KEY)
        sg.send(message)
        print(f"Welcome email sent to {customer_email}")
    except Exception as e:
        print(f"Error sending welcome email: {e}")

# =================================================================
# ===== 3. Flask Routes (‡∏™‡πà‡∏ß‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö) =====
# =================================================================

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/result-fast-profit')
def result_fast_profit():
    return render_template('result-fast-profit.html', stripe_link_4900=STRIPE_LINK_4900)

@app.route('/result-stable-growth')
def result_stable_growth():
    return render_template('result-stable-growth.html', stripe_link_4900=STRIPE_LINK_4900)

@app.route('/the-fast-track-kit')
def the_fast_track_kit():
    return render_template('The-Fast-Track-Kit.html', stripe_link_2900=STRIPE_LINK_2900, stripe_link_4900=STRIPE_LINK_4900)

@app.route('/thank-you-fast-track')
def thank_you_fast_track():
    return render_template('Thank You - Fast Track.html')

@app.route('/thank-you-standard')
def thank_you_standard():
    return render_template('Thank You - Standard.html')

@app.route('/about')
def about():
    return render_template('about.html')

@app.route('/submit-quiz', methods=['POST'])
def submit_quiz():
    """
    Endpoint to process quiz submissions.
    """
    data = request.get_json(force=True)
    email = data.get('email')
    answers = data.get('answers', [])

    aggressive_keys = {'1B', '2A', '3A'}
    aggressive_count = 0
    for idx, choice in enumerate(answers):
        key = f"{idx+1}{choice}"
        if key in aggressive_keys:
            aggressive_count += 1
    style = 'fast' if aggressive_count >= 2 else 'stable'

    if email:
        try:
            send_results_email(email, style, customer_name=email.split('@')[0])
        except Exception as e:
            print(f"Error calling send_results_email from submit_quiz: {e}")

    redirect_url = url_for('result_fast_profit') if style == 'fast' else url_for('result_stable_growth')
    return jsonify({'redirect_url': redirect_url})

@app.route('/stripe-webhook', methods=['POST'])
def stripe_webhook():
    """
    Endpoint ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏±‡∏ö Webhook ‡∏à‡∏≤‡∏Å Stripe
    """
    data = request.get_json(force=True)
    
    # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á ‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö event type ‡πÅ‡∏•‡∏∞‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô (signature) ‡∏à‡∏≤‡∏Å Stripe
    # event = stripe.Webhook.construct_event(payload=request.data, sig_header=request.headers.get('stripe-signature'), secret=YOUR_WEBHOOK_SECRET)
    
    customer_email = data.get('customer_email')
    purchase_type = data.get('purchase_type') # 'standard' or 'fast-track'

    if not customer_email or not purchase_type:
        return jsonify({'error': 'Missing customer_email or purchase_type'}), 400

    try:
        send_welcome_email(customer_email, purchase_type)
        return jsonify({'status': 'success', 'message': 'Welcome email sent.'}), 200
    except Exception as e:
        print(f"Error calling send_welcome_email from webhook: {e}")
        return jsonify({'error': str(e)}), 500

# =================================================================
# ===== 4. ‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏±‡∏ô‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô =====
# =================================================================

if __name__ == '__main__':
    app.run(debug=True)